def hex128(n):
    lower = n & 0xFFFFFFFFFFFFFFFF
    upper = n >> 64
    return f"((uint128_t)0x{upper:016x} << 64) | 0x{lower:016x}"


def uint128array(name, values):
    print(f"const uint128_t {name}[81] = {{")
    for i in range(81):
        print(f"    {hex128(values[i])},")
    print("};")


ADJ_POSITIONS = [
    [9, 1],
    [10, 9, 0, 2],
    [11, 10, 1, 3],
    [12, 11, 2, 4],
    [13, 12, 3, 5],
    [14, 13, 4, 6],
    [15, 14, 5, 7],
    [16, 15, 6, 8],
    [17, 16, 7],
    [0, 1, 18, 10],
    [1, 2, 19, 18, 9, 11],
    [2, 3, 20, 19, 10, 12],
    [3, 4, 21, 20, 11, 13],
    [4, 5, 22, 21, 12, 14],
    [5, 6, 23, 22, 13, 15],
    [6, 7, 24, 23, 14, 16],
    [7, 8, 25, 24, 15, 17],
    [8, 26, 25, 16],
    [9, 10, 27, 19],
    [10, 11, 28, 27, 18, 20],
    [11, 12, 29, 28, 19, 21],
    [12, 13, 30, 29, 20, 22],
    [13, 14, 31, 30, 21, 23],
    [14, 15, 32, 31, 22, 24],
    [15, 16, 33, 32, 23, 25],
    [16, 17, 34, 33, 24, 26],
    [17, 35, 34, 25],
    [18, 19, 36, 28],
    [19, 20, 37, 36, 27, 29],
    [20, 21, 38, 37, 28, 30],
    [21, 22, 39, 38, 29, 31],
    [22, 23, 40, 39, 30, 32],
    [23, 24, 41, 40, 31, 33],
    [24, 25, 42, 41, 32, 34],
    [25, 26, 43, 42, 33, 35],
    [26, 44, 43, 34],
    [27, 28, 45, 37],
    [28, 29, 46, 45, 36, 38],
    [29, 30, 47, 46, 37, 39],
    [30, 31, 48, 47, 38, 40],
    [31, 32, 49, 48, 39, 41],
    [32, 33, 50, 49, 40, 42],
    [33, 34, 51, 50, 41, 43],
    [34, 35, 52, 51, 42, 44],
    [35, 53, 52, 43],
    [36, 37, 54, 46],
    [37, 38, 55, 54, 45, 47],
    [38, 39, 56, 55, 46, 48],
    [39, 40, 57, 56, 47, 49],
    [40, 41, 58, 57, 48, 50],
    [41, 42, 59, 58, 49, 51],
    [42, 43, 60, 59, 50, 52],
    [43, 44, 61, 60, 51, 53],
    [44, 62, 61, 52],
    [45, 46, 63, 55],
    [46, 47, 64, 63, 54, 56],
    [47, 48, 65, 64, 55, 57],
    [48, 49, 66, 65, 56, 58],
    [49, 50, 67, 66, 57, 59],
    [50, 51, 68, 67, 58, 60],
    [51, 52, 69, 68, 59, 61],
    [52, 53, 70, 69, 60, 62],
    [53, 71, 70, 61],
    [54, 55, 72, 64],
    [55, 56, 73, 72, 63, 65],
    [56, 57, 74, 73, 64, 66],
    [57, 58, 75, 74, 65, 67],
    [58, 59, 76, 75, 66, 68],
    [59, 60, 77, 76, 67, 69],
    [60, 61, 78, 77, 68, 70],
    [61, 62, 79, 78, 69, 71],
    [62, 80, 79, 70],
    [63, 64, 73],
    [64, 65, 72, 74],
    [65, 66, 73, 75],
    [66, 67, 74, 76],
    [67, 68, 75, 77],
    [68, 69, 76, 78],
    [69, 70, 77, 79],
    [70, 71, 78, 80],
    [71, 79],
]

JUMP_POSITIONS = [
    [18, 2],
    [19, 3],
    [20, 18, 0, 4],
    [21, 19, 1, 5],
    [22, 20, 2, 6],
    [23, 21, 3, 7],
    [24, 22, 4, 8],
    [25, 23, 5],
    [26, 24, 6],
    [27, 11],
    [28, 12],
    [29, 27, 9, 13],
    [30, 28, 10, 14],
    [31, 29, 11, 15],
    [32, 30, 12, 16],
    [33, 31, 13, 17],
    [34, 32, 14],
    [35, 33, 15],
    [0, 2, 36, 20],
    [1, 3, 37, 21],
    [2, 4, 38, 36, 18, 22],
    [3, 5, 39, 37, 19, 23],
    [4, 6, 40, 38, 20, 24],
    [5, 7, 41, 39, 21, 25],
    [6, 8, 42, 40, 22, 26],
    [7, 43, 41, 23],
    [8, 44, 42, 24],
    [9, 11, 45, 29],
    [10, 12, 46, 30],
    [11, 13, 47, 45, 27, 31],
    [12, 14, 48, 46, 28, 32],
    [13, 15, 49, 47, 29, 33],
    [14, 16, 50, 48, 30, 34],
    [15, 17, 51, 49, 31, 35],
    [16, 52, 50, 32],
    [17, 53, 51, 33],
    [18, 20, 54, 38],
    [19, 21, 55, 39],
    [20, 22, 56, 54, 36, 40],
    [21, 23, 57, 55, 37, 41],
    [22, 24, 58, 56, 38, 42],
    [23, 25, 59, 57, 39, 43],
    [24, 26, 60, 58, 40, 44],
    [25, 61, 59, 41],
    [26, 62, 60, 42],
    [27, 29, 63, 47],
    [28, 30, 64, 48],
    [29, 31, 65, 63, 45, 49],
    [30, 32, 66, 64, 46, 50],
    [31, 33, 67, 65, 47, 51],
    [32, 34, 68, 66, 48, 52],
    [33, 35, 69, 67, 49, 53],
    [34, 70, 68, 50],
    [35, 71, 69, 51],
    [36, 38, 72, 56],
    [37, 39, 73, 57],
    [38, 40, 74, 72, 54, 58],
    [39, 41, 75, 73, 55, 59],
    [40, 42, 76, 74, 56, 60],
    [41, 43, 77, 75, 57, 61],
    [42, 44, 78, 76, 58, 62],
    [43, 79, 77, 59],
    [44, 80, 78, 60],
    [45, 47, 65],
    [46, 48, 66],
    [47, 49, 63, 67],
    [48, 50, 64, 68],
    [49, 51, 65, 69],
    [50, 52, 66, 70],
    [51, 53, 67, 71],
    [52, 68],
    [53, 69],
    [54, 56, 74],
    [55, 57, 75],
    [56, 58, 72, 76],
    [57, 59, 73, 77],
    [58, 60, 74, 78],
    [59, 61, 75, 79],
    [60, 62, 76, 80],
    [61, 77],
    [62, 78],
]

JUMP_POSITIONS_MASK = [
    [9, 1],
    [10, 2],
    [11, 10, 1, 3],
    [12, 11, 2, 4],
    [13, 12, 3, 5],
    [14, 13, 4, 6],
    [15, 14, 5, 7],
    [16, 15, 6],
    [17, 16, 7],
    [18, 10],
    [19, 11],
    [20, 19, 10, 12],
    [21, 20, 11, 13],
    [22, 21, 12, 14],
    [23, 22, 13, 15],
    [24, 23, 14, 16],
    [25, 24, 15],
    [26, 25, 16],
    [9, 10, 27, 19],
    [10, 11, 28, 20],
    [11, 12, 29, 28, 19, 21],
    [12, 13, 30, 29, 20, 22],
    [13, 14, 31, 30, 21, 23],
    [14, 15, 32, 31, 22, 24],
    [15, 16, 33, 32, 23, 25],
    [16, 34, 33, 24],
    [17, 35, 34, 25],
    [18, 19, 36, 28],
    [19, 20, 37, 29],
    [20, 21, 38, 37, 28, 30],
    [21, 22, 39, 38, 29, 31],
    [22, 23, 40, 39, 30, 32],
    [23, 24, 41, 40, 31, 33],
    [24, 25, 42, 41, 32, 34],
    [25, 43, 42, 33],
    [26, 44, 43, 34],
    [27, 28, 45, 37],
    [28, 29, 46, 38],
    [29, 30, 47, 46, 37, 39],
    [30, 31, 48, 47, 38, 40],
    [31, 32, 49, 48, 39, 41],
    [32, 33, 50, 49, 40, 42],
    [33, 34, 51, 50, 41, 43],
    [34, 52, 51, 42],
    [35, 53, 52, 43],
    [36, 37, 54, 46],
    [37, 38, 55, 47],
    [38, 39, 56, 55, 46, 48],
    [39, 40, 57, 56, 47, 49],
    [40, 41, 58, 57, 48, 50],
    [41, 42, 59, 58, 49, 51],
    [42, 43, 60, 59, 50, 52],
    [43, 61, 60, 51],
    [44, 62, 61, 52],
    [45, 46, 63, 55],
    [46, 47, 64, 56],
    [47, 48, 65, 64, 55, 57],
    [48, 49, 66, 65, 56, 58],
    [49, 50, 67, 66, 57, 59],
    [50, 51, 68, 67, 58, 60],
    [51, 52, 69, 68, 59, 61],
    [52, 70, 69, 60],
    [53, 71, 70, 61],
    [54, 55, 64],
    [55, 56, 65],
    [56, 57, 64, 66],
    [57, 58, 65, 67],
    [58, 59, 66, 68],
    [59, 60, 67, 69],
    [60, 61, 68, 70],
    [61, 69],
    [62, 70],
    [63, 64, 73],
    [64, 65, 74],
    [65, 66, 73, 75],
    [66, 67, 74, 76],
    [67, 68, 75, 77],
    [68, 69, 76, 78],
    [69, 70, 77, 79],
    [70, 78],
    [71, 79],
]

for i in range(81):

    table = {}
    for j in range(2 ** len(JUMP_POSITIONS[i])):
        mask = 0
        to = 0
        for k in range(len(JUMP_POSITIONS[i])):
            if j & (1 << k):
                mask |= 1 << JUMP_POSITIONS_MASK[i][k]
                to |= 1 << JUMP_POSITIONS[i][k]
        table[mask] = to
    if len(JUMP_POSITIONS[i]) != len(ADJ_POSITIONS[i]):
        diff = list(set(ADJ_POSITIONS[i]) - set(JUMP_POSITIONS_MASK[i]))
        for j in range(len(diff)):
            for key in list(table.keys()):
                add_key = key | (1 << diff[j])
                table[add_key] = table[key]
    JUMP_POSITIONS[i] = table

    mask = 0
    for pos in ADJ_POSITIONS[i]:
        mask |= 1 << pos
    ADJ_POSITIONS[i] = mask


print("#pragma once")
print("#include <map>")
print("using uint128_t = __uint128_t;")
uint128array("ADJ_POSITIONS", ADJ_POSITIONS)

print("const std::map<uint128_t, uint128_t> JUMP_POSITIONS[81] = {")
for i in range(81):
    keys = JUMP_POSITIONS[i].keys()
    print(f"    {{")
    for key in keys:
        print("{", hex128(key), ",", hex128(JUMP_POSITIONS[i][key]), "},")
    print("    },")

print("};")
